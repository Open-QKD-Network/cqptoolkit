/*!
* @file
* @brief ISiteAgent
*
* @copyright Copyright (C) University of Bristol 2017
*    This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. 
*    If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.
*    See LICENSE file for details.
* @date 02/02/2018
* @author Richard Collins <richard.collins@bristol.ac.uk>
*/

syntax = "proto3";
import public "google/protobuf/empty.proto";
import public "Site.proto";
import public "Keys.proto";
import public "Device.proto";


package cqp.remote;

/**
 * @brief ISiteAgent Interface
 * Interface for controlling key generation along paths
 */
service ISiteAgent
{
    /**
    * Start a key exchange using one or more device pairs.
    * @details Parameters can be passed to the low level system. The site agent is responsible for
    * sending the parameters to the Device
    @startuml
        title Passing system parameters to both sites

        participant "Site A" as sa1
        boundary "IQKDDevice" as iqkd
        participant "others" as others
        boundary "ISessionController" as sesh
        boundary "ISiteAgent" as sa2
        boundary "IQKDDevice" as iqkd2

        [-> sa1 : StartNode()
        activate sa1
        sa1 -> iqkd : Initialise(intial)
        activate iqkd
            iqkd -> others : SetParameters()
            iqkd -> sesh : SetParameters()
            note over iqkd
                accepted parameters are returned
            end note
            iqkd -> sa1
        deactivate iqkd
            sa1 -> sa2 : StartNode()
            activate sa2

                sa2 -> iqkd2 : Initialise(requested)
            deactivate sa2
        deactivate sa1

        @enduml
    * @param request The full path of the exchange to start
    * @return status
    */
    rpc StartNode(PhysicalPath) returns (google.protobuf.Empty);

    /**
    * @brief EndKeyExchange
    * @param request The path to end
    * @return status
    */
    rpc EndKeyExchange(PhysicalPath) returns (google.protobuf.Empty);

    /**
    * Get the settings of the site agent.
    * This is the same as is registered with the network manager and includes the connected devices
    * @param response The site details
    * @return status
    */
    rpc GetSiteDetails(google.protobuf.Empty) returns (Site);

    rpc RegisterDevice(DeviceConfig) returns (google.protobuf.Empty);

    rpc UnregisterDevice(DeviceID) returns (google.protobuf.Empty);
}
