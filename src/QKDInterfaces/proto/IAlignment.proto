/*!
* @file
* @brief IAlignment
*
* @copyright Copyright (C) University of Bristol 2017
*    This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. 
*    If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.
*    See LICENSE file for details.
* @date 23/01/2018
* @author Richard Collins <richard.collins@bristol.ac.uk>
*/
syntax = "proto3";
import public "google/protobuf/empty.proto";
import public "Qubits.proto";

package cqp.remote;

/**
 * a message for the frame id
 */
message MarkersRequest {
    /// The frame for this data
    uint64 frameId = 1;
    /// How many markers does the caller require
    uint64 numOfMarkers = 2;
    /// Should the basis be sent back with the markers
    bool sendAllBasis = 3;
};

/**
 * Provides the requested markers and optional basis
 */
message MarkersResponse {
    /// The qubits used to align two data sets
    map<uint64 /* SequenceNumber */, BB84.Type> markers = 1;
    /// The basis for all the qubits
    repeated Basis.Type basis = 2;
};

/**
 * A list of slots for a frame which where detected
 */
message ValidDetections{
    /// The frame id for the data
    uint64 frameId = 1;
    /// The slots which the recipient should keep, discarding the others
    repeated uint64 slotIds = 2;
    /// How secure is the data
    double securityParameter = 3;
};

/**
 * @brief The IAlignement class
 * Interface for communication between Alignment classes
 */
service IAlignment {

    /**
     * @brief GetAlignmentMarks
     * Requests markers for a frame to help align the received data.
     * @param request The frame to query
     * @param response A sparse set of data to provide comparison points within the data and the bases for .
     * @return status
     */
    rpc GetAlignmentMarkers(MarkersRequest) returns (MarkersResponse);

    /**
     * @brief DiscardTransmissions
     * Instructs the transmitter to discard all but the supplied indexes
     * @param request
     * @return status
     */
    rpc DiscardTransmissions(ValidDetections) returns (google.protobuf.Empty);
}
