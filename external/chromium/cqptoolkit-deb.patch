Add CQPToolkit super powers to Chromium
Index: chromium-browser-73.0.3683.86/net/BUILD.gn
===================================================================
--- chromium-browser-73.0.3683.86.orig/net/BUILD.gn
+++ chromium-browser-73.0.3683.86/net/BUILD.gn
@@ -101,6 +101,8 @@ if (is_linux) {
   net_configs += [ "//build/config/linux:libresolv" ]
 }
 
+net_configs += [ "//third_party/cqp:cqptoolkit" ]
+
 source_set("constants") {
   sources = [
     "base/trace_constants.h",
Index: chromium-browser-73.0.3683.86/net/socket/ssl_client_socket_impl.cc
===================================================================
--- chromium-browser-73.0.3683.86.orig/net/socket/ssl_client_socket_impl.cc
+++ chromium-browser-73.0.3683.86/net/socket/ssl_client_socket_impl.cc
@@ -65,6 +65,8 @@
 #include "third_party/brotli/include/brotli/decode.h"
 #endif
 
+#include "KeyManagement/OpenSSLHandler.h"
+
 namespace net {
 
 namespace {
@@ -324,6 +326,9 @@ class SSLClientSocketImpl::SSLContext {
     SSL_CTX_set_info_callback(ssl_ctx_.get(), InfoCallback);
     SSL_CTX_set_msg_callback(ssl_ctx_.get(), MessageCallback);
 
+    //OpenSSLHandler_SetHSM("pkcs11:module-name=yubihsm_pkcs11.so?pin-value=0001password");
+    SSL_CTX_set_psk_client_callback(ssl_ctx_.get(), OpenSSLHandler_ClientCallback);
+
 #if !defined(NET_DISABLE_BROTLI)
     SSL_CTX_add_cert_compression_alg(
         ssl_ctx_.get(), TLSEXT_cert_compression_brotli,
@@ -868,7 +873,7 @@ int SSLClientSocketImpl::Init() {
 
   // Use BoringSSL defaults, but disable HMAC-SHA1 ciphers in ECDSA. These are
   // the remaining CBC-mode ECDSA ciphers.
-  std::string command("ALL::!aPSK:!ECDSA+SHA1");
+  std::string command("ALL::!ECDSA+SHA1:!kRSA+AESGCM");
 
   if (ssl_config_.require_ecdhe)
     command.append(":!kRSA");
Index: chromium-browser-73.0.3683.86/third_party/cqp/BUILD.gn
===================================================================
--- /dev/null
+++ chromium-browser-73.0.3683.86/third_party/cqp/BUILD.gn
@@ -0,0 +1,4 @@
+config("cqptoolkit")
+{
+  libs = [ "KeyManagement-x86_64", "CQPUI-x86_64" ]
+}
Index: chromium-browser-73.0.3683.86/chrome/app/chrome_main_delegate.cc
===================================================================
--- chromium-browser-73.0.3683.86.orig/chrome/app/chrome_main_delegate.cc
+++ chromium-browser-73.0.3683.86/chrome/app/chrome_main_delegate.cc
@@ -162,6 +162,8 @@
 #include "chrome/child/pdf_child_init.h"
 #endif
 
+#include "KeyManagement/OpenSSLHandler.h"
+
 #if !defined(CHROME_MULTIPLE_DLL_BROWSER)
 base::LazyInstance<ChromeContentGpuClient>::DestructorAtExit
     g_chrome_content_gpu_client = LAZY_INSTANCE_INITIALIZER;
@@ -722,6 +724,14 @@ bool ChromeMainDelegate::BasicStartupCom
   }
 #endif
 
+    if(command_line.HasSwitch("pskhsm"))
+    {
+        LOG(INFO) << "Setting HSM to " << command_line.GetSwitchValueASCII("pskhsm");
+        OpenSSLHandler_SetHSM(command_line.GetSwitchValueASCII("pskhsm").c_str());
+    } else {
+        LOG(ERROR) << "PSK HSM not specified";
+    }
+
   content::SetContentClient(&chrome_content_client_);
 
   // The TLS slot used by the memlog allocator shim needs to be initialized
